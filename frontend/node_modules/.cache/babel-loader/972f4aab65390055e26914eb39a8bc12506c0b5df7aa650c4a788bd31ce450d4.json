{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\praty\\\\OneDrive\\\\Documents\\\\GitHub\\\\metaverse-iam-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// Contract ABIs (simplified for demo)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PRIVACY_IAM_ABI = [\"function registerUser(bytes32 profileHash)\", \"function updateUserProfile(bytes32 newProfileHash)\", \"function registerPlatform(string memory platformName)\", \"function grantAccess(address user, string memory platformName)\", \"function hasAccess(address user, string memory platformName) view returns (bool)\", \"function generateAccessToken(string memory platformName) view returns (bytes32)\", \"function getUserPlatforms(address user) view returns (string[])\", \"function users(address) view returns (bytes32 profileHash, address userAddress, uint256 timestamp, bool isActive)\", \"event UserRegistered(address indexed user, bytes32 profileHash)\", \"event PlatformRegistered(string indexed platformName, address indexed owner)\", \"event AccessGranted(address indexed user, string indexed platform)\"];\nconst METAVERSE_REGISTRY_ABI = [\"function registerWorld(string memory worldName, string memory endpoint, bool requiresAuth)\", \"function canAccessWorld(address user, string memory worldName) view returns (bool)\", \"function worlds(string) view returns (string name, string endpoint, address owner, bool requiresAuth, uint256 createdAt)\", \"event WorldRegistered(string indexed worldName, address indexed owner)\"];\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [privacyIAMContract, setPrivacyIAMContract] = useState(null);\n  const [metaverseRegistryContract, setMetaverseRegistryContract] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n\n  // User state\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [userPlatforms, setUserPlatforms] = useState([]);\n\n  // Form states\n  const [profileData, setProfileData] = useState('');\n  const [platformName, setPlatformName] = useState('');\n  const [worldName, setWorldName] = useState('');\n  const [worldEndpoint, setWorldEndpoint] = useState('');\n  const [requiresAuth, setRequiresAuth] = useState(true);\n  const [accessCheckUser, setAccessCheckUser] = useState('');\n  const [accessCheckPlatform, setAccessCheckPlatform] = useState('');\n\n  // Contract addresses (update these with your deployed addresses)\n  const PRIVACY_IAM_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n  const METAVERSE_REGISTRY_ADDRESS = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\n  useEffect(() => {\n    initializeEthers();\n  }, []);\n  useEffect(() => {\n    if (account && privacyIAMContract) {\n      checkUserRegistration();\n    }\n  }, [account, privacyIAMContract]);\n  const initializeEthers = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        setProvider(provider);\n        const signer = await provider.getSigner();\n        setSigner(signer);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        setAccount(accounts[0]);\n\n        // Initialize contracts\n        const privacyIAM = new ethers.Contract(PRIVACY_IAM_ADDRESS, PRIVACY_IAM_ABI, signer);\n        const metaverseRegistry = new ethers.Contract(METAVERSE_REGISTRY_ADDRESS, METAVERSE_REGISTRY_ABI, signer);\n        setPrivacyIAMContract(privacyIAM);\n        setMetaverseRegistryContract(metaverseRegistry);\n        setStatus('Connected to wallet successfully!');\n      } catch (error) {\n        setStatus('Error connecting to wallet: ' + error.message);\n        console.error('Error:', error);\n      }\n    } else {\n      setStatus('Please install MetaMask!');\n    }\n  };\n  const checkUserRegistration = async () => {\n    try {\n      const user = await privacyIAMContract.users(account);\n      if (user.isActive) {\n        setIsRegistered(true);\n        setUserProfile(user);\n\n        // Get user platforms\n        const platforms = await privacyIAMContract.getUserPlatforms(account);\n        setUserPlatforms(platforms);\n      }\n    } catch (error) {\n      console.log('User not registered or error:', error.message);\n    }\n  };\n  const registerUser = async () => {\n    if (!profileData.trim()) {\n      setStatus('Please enter profile data');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Hash the profile data for privacy\n      const profileHash = ethers.keccak256(ethers.toUtf8Bytes(profileData));\n      const tx = await privacyIAMContract.registerUser(profileHash);\n      setStatus('Registering user... Please wait for confirmation');\n      await tx.wait();\n      setStatus('User registered successfully!');\n      setIsRegistered(true);\n\n      // Refresh user data\n      await checkUserRegistration();\n    } catch (error) {\n      setStatus('Error registering user: ' + error.message);\n      console.error('Error:', error);\n    }\n    setLoading(false);\n  };\n  const updateUserProfile = async () => {\n    if (!profileData.trim()) {\n      setStatus('Please enter new profile data');\n      return;\n    }\n    setLoading(true);\n    try {\n      const newProfileHash = ethers.keccak256(ethers.toUtf8Bytes(profileData));\n      const tx = await privacyIAMContract.updateUserProfile(newProfileHash);\n      setStatus('Updating profile... Please wait for confirmation');\n      await tx.wait();\n      setStatus('Profile updated successfully!');\n\n      // Refresh user data\n      await checkUserRegistration();\n    } catch (error) {\n      setStatus('Error updating profile: ' + error.message);\n      console.error('Error:', error);\n    }\n    setLoading(false);\n  };\n  const registerPlatform = async () => {\n    if (!platformName.trim()) {\n      setStatus('Please enter platform name');\n      return;\n    }\n    setLoading(true);\n    try {\n      const tx = await privacyIAMContract.registerPlatform(platformName);\n      setStatus('Registering platform... Please wait for confirmation');\n      await tx.wait();\n      setStatus('Platform registered successfully!');\n      setPlatformName('');\n    } catch (error) {\n      setStatus('Error registering platform: ' + error.message);\n      console.error('Error:', error);\n    }\n    setLoading(false);\n  };\n  const registerWorld = async () => {\n    if (!worldName.trim() || !worldEndpoint.trim()) {\n      setStatus('Please enter world name and endpoint');\n      return;\n    }\n    setLoading(true);\n    try {\n      const tx = await metaverseRegistryContract.registerWorld(worldName, worldEndpoint, requiresAuth);\n      setStatus('Registering world... Please wait for confirmation');\n      await tx.wait();\n      setStatus('Virtual world registered successfully!');\n      setWorldName('');\n      setWorldEndpoint('');\n    } catch (error) {\n      setStatus('Error registering world: ' + error.message);\n      console.error('Error:', error);\n    }\n    setLoading(false);\n  };\n  const checkAccess = async () => {\n    if (!accessCheckUser.trim() || !accessCheckPlatform.trim()) {\n      setStatus('Please enter user address and platform name');\n      return;\n    }\n    setLoading(true);\n    try {\n      const hasAccess = await privacyIAMContract.hasAccess(accessCheckUser, accessCheckPlatform);\n      setStatus(`Access check result: ${hasAccess ? 'GRANTED' : 'DENIED'}`);\n    } catch (error) {\n      setStatus('Error checking access: ' + error.message);\n      console.error('Error:', error);\n    }\n    setLoading(false);\n  };\n  const generateAccessToken = async () => {\n    if (!accessCheckPlatform.trim()) {\n      setStatus('Please enter platform name');\n      return;\n    }\n    setLoading(true);\n    try {\n      const token = await privacyIAMContract.generateAccessToken(accessCheckPlatform);\n      setStatus(`Access token generated: ${token}`);\n    } catch (error) {\n      setStatus('Error generating token: ' + error.message);\n      console.error('Error:', error);\n    }\n    setLoading(false);\n  };\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        await initializeEthers();\n      } catch (error) {\n        setStatus('Error connecting wallet: ' + error.message);\n      }\n    } else {\n      setStatus('Please install MetaMask!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDD10 Privacy-Preserving IAM for Metaverse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: account ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Connected: \", account.slice(0, 6), \"...\", account.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${isRegistered ? 'registered' : 'unregistered'}`,\n            children: isRegistered ? '✅ Registered User' : '❌ Not Registered'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWallet,\n          className: \"connect-btn\",\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: status && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), account && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDC64 User Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter profile data (will be hashed for privacy)\",\n              value: profileData,\n              onChange: e => setProfileData(e.target.value),\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), !isRegistered ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: registerUser,\n              disabled: loading,\n              className: \"action-btn register-btn\",\n              children: loading ? 'Registering...' : 'Register User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateUserProfile,\n              disabled: loading,\n              className: \"action-btn update-btn\",\n              children: loading ? 'Updating...' : 'Update Profile'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), isRegistered && userPlatforms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-platforms\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Platforms:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: userPlatforms.map((platform, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: platform\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83C\\uDFE2 Platform Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Platform name\",\n              value: platformName,\n              onChange: e => setPlatformName(e.target.value),\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: registerPlatform,\n              disabled: loading,\n              className: \"action-btn platform-btn\",\n              children: loading ? 'Registering...' : 'Register Platform'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83C\\uDF10 Virtual World Registry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"World name\",\n              value: worldName,\n              onChange: e => setWorldName(e.target.value),\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"World endpoint URL\",\n              value: worldEndpoint,\n              onChange: e => setWorldEndpoint(e.target.value),\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: requiresAuth,\n                onChange: e => setRequiresAuth(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), \"Requires Authentication\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: registerWorld,\n              disabled: loading,\n              className: \"action-btn world-btn\",\n              children: loading ? 'Registering...' : 'Register World'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDD11 Access Control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"User address to check\",\n              value: accessCheckUser,\n              onChange: e => setAccessCheckUser(e.target.value),\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Platform name\",\n              value: accessCheckPlatform,\n              onChange: e => setAccessCheckPlatform(e.target.value),\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: checkAccess,\n                disabled: loading,\n                className: \"action-btn check-btn\",\n                children: loading ? 'Checking...' : 'Check Access'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: generateAccessToken,\n                disabled: loading,\n                className: \"action-btn token-btn\",\n                children: loading ? 'Generating...' : 'Generate Token'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Privacy-Preserving IAM System - Blockchain-based Identity Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rbTVT9hletAi9nyPyUmWOhGfn+A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","PRIVACY_IAM_ABI","METAVERSE_REGISTRY_ABI","App","_s","account","setAccount","provider","setProvider","signer","setSigner","privacyIAMContract","setPrivacyIAMContract","metaverseRegistryContract","setMetaverseRegistryContract","loading","setLoading","status","setStatus","isRegistered","setIsRegistered","userProfile","setUserProfile","userPlatforms","setUserPlatforms","profileData","setProfileData","platformName","setPlatformName","worldName","setWorldName","worldEndpoint","setWorldEndpoint","requiresAuth","setRequiresAuth","accessCheckUser","setAccessCheckUser","accessCheckPlatform","setAccessCheckPlatform","PRIVACY_IAM_ADDRESS","METAVERSE_REGISTRY_ADDRESS","initializeEthers","checkUserRegistration","window","ethereum","BrowserProvider","getSigner","accounts","send","privacyIAM","Contract","metaverseRegistry","error","message","console","user","users","isActive","platforms","getUserPlatforms","log","registerUser","trim","profileHash","keccak256","toUtf8Bytes","tx","wait","updateUserProfile","newProfileHash","registerPlatform","registerWorld","checkAccess","hasAccess","generateAccessToken","token","connectWallet","request","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","onClick","type","placeholder","value","onChange","e","target","disabled","length","map","platform","index","checked","_c","$RefreshReg$"],"sources":["C:/Users/praty/OneDrive/Documents/GitHub/metaverse-iam-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport './App.css';\r\n\r\n// Contract ABIs (simplified for demo)\r\nconst PRIVACY_IAM_ABI = [\r\n  \"function registerUser(bytes32 profileHash)\",\r\n  \"function updateUserProfile(bytes32 newProfileHash)\",\r\n  \"function registerPlatform(string memory platformName)\",\r\n  \"function grantAccess(address user, string memory platformName)\",\r\n  \"function hasAccess(address user, string memory platformName) view returns (bool)\",\r\n  \"function generateAccessToken(string memory platformName) view returns (bytes32)\",\r\n  \"function getUserPlatforms(address user) view returns (string[])\",\r\n  \"function users(address) view returns (bytes32 profileHash, address userAddress, uint256 timestamp, bool isActive)\",\r\n  \"event UserRegistered(address indexed user, bytes32 profileHash)\",\r\n  \"event PlatformRegistered(string indexed platformName, address indexed owner)\",\r\n  \"event AccessGranted(address indexed user, string indexed platform)\"\r\n];\r\n\r\nconst METAVERSE_REGISTRY_ABI = [\r\n  \"function registerWorld(string memory worldName, string memory endpoint, bool requiresAuth)\",\r\n  \"function canAccessWorld(address user, string memory worldName) view returns (bool)\",\r\n  \"function worlds(string) view returns (string name, string endpoint, address owner, bool requiresAuth, uint256 createdAt)\",\r\n  \"event WorldRegistered(string indexed worldName, address indexed owner)\"\r\n];\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState('');\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [privacyIAMContract, setPrivacyIAMContract] = useState(null);\r\n  const [metaverseRegistryContract, setMetaverseRegistryContract] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [status, setStatus] = useState('');\r\n  \r\n  // User state\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [userPlatforms, setUserPlatforms] = useState([]);\r\n  \r\n  // Form states\r\n  const [profileData, setProfileData] = useState('');\r\n  const [platformName, setPlatformName] = useState('');\r\n  const [worldName, setWorldName] = useState('');\r\n  const [worldEndpoint, setWorldEndpoint] = useState('');\r\n  const [requiresAuth, setRequiresAuth] = useState(true);\r\n  const [accessCheckUser, setAccessCheckUser] = useState('');\r\n  const [accessCheckPlatform, setAccessCheckPlatform] = useState('');\r\n\r\n  // Contract addresses (update these with your deployed addresses)\r\n const PRIVACY_IAM_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";  \r\nconst METAVERSE_REGISTRY_ADDRESS = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";  \r\n\r\n\r\n  useEffect(() => {\r\n    initializeEthers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (account && privacyIAMContract) {\r\n      checkUserRegistration();\r\n    }\r\n  }, [account, privacyIAMContract]);\r\n\r\n  const initializeEthers = async () => {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      try {\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        setProvider(provider);\r\n        \r\n        const signer = await provider.getSigner();\r\n        setSigner(signer);\r\n        \r\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\r\n        setAccount(accounts[0]);\r\n        \r\n        // Initialize contracts\r\n        const privacyIAM = new ethers.Contract(PRIVACY_IAM_ADDRESS, PRIVACY_IAM_ABI, signer);\r\n        const metaverseRegistry = new ethers.Contract(METAVERSE_REGISTRY_ADDRESS, METAVERSE_REGISTRY_ABI, signer);\r\n        \r\n        setPrivacyIAMContract(privacyIAM);\r\n        setMetaverseRegistryContract(metaverseRegistry);\r\n        \r\n        setStatus('Connected to wallet successfully!');\r\n      } catch (error) {\r\n        setStatus('Error connecting to wallet: ' + error.message);\r\n        console.error('Error:', error);\r\n      }\r\n    } else {\r\n      setStatus('Please install MetaMask!');\r\n    }\r\n  };\r\n\r\n  const checkUserRegistration = async () => {\r\n    try {\r\n      const user = await privacyIAMContract.users(account);\r\n      if (user.isActive) {\r\n        setIsRegistered(true);\r\n        setUserProfile(user);\r\n        \r\n        // Get user platforms\r\n        const platforms = await privacyIAMContract.getUserPlatforms(account);\r\n        setUserPlatforms(platforms);\r\n      }\r\n    } catch (error) {\r\n      console.log('User not registered or error:', error.message);\r\n    }\r\n  };\r\n\r\n  const registerUser = async () => {\r\n    if (!profileData.trim()) {\r\n      setStatus('Please enter profile data');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      // Hash the profile data for privacy\r\n      const profileHash = ethers.keccak256(ethers.toUtf8Bytes(profileData));\r\n      \r\n      const tx = await privacyIAMContract.registerUser(profileHash);\r\n      setStatus('Registering user... Please wait for confirmation');\r\n      \r\n      await tx.wait();\r\n      setStatus('User registered successfully!');\r\n      setIsRegistered(true);\r\n      \r\n      // Refresh user data\r\n      await checkUserRegistration();\r\n    } catch (error) {\r\n      setStatus('Error registering user: ' + error.message);\r\n      console.error('Error:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const updateUserProfile = async () => {\r\n    if (!profileData.trim()) {\r\n      setStatus('Please enter new profile data');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const newProfileHash = ethers.keccak256(ethers.toUtf8Bytes(profileData));\r\n      \r\n      const tx = await privacyIAMContract.updateUserProfile(newProfileHash);\r\n      setStatus('Updating profile... Please wait for confirmation');\r\n      \r\n      await tx.wait();\r\n      setStatus('Profile updated successfully!');\r\n      \r\n      // Refresh user data\r\n      await checkUserRegistration();\r\n    } catch (error) {\r\n      setStatus('Error updating profile: ' + error.message);\r\n      console.error('Error:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const registerPlatform = async () => {\r\n    if (!platformName.trim()) {\r\n      setStatus('Please enter platform name');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const tx = await privacyIAMContract.registerPlatform(platformName);\r\n      setStatus('Registering platform... Please wait for confirmation');\r\n      \r\n      await tx.wait();\r\n      setStatus('Platform registered successfully!');\r\n      setPlatformName('');\r\n    } catch (error) {\r\n      setStatus('Error registering platform: ' + error.message);\r\n      console.error('Error:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const registerWorld = async () => {\r\n    if (!worldName.trim() || !worldEndpoint.trim()) {\r\n      setStatus('Please enter world name and endpoint');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const tx = await metaverseRegistryContract.registerWorld(\r\n        worldName,\r\n        worldEndpoint,\r\n        requiresAuth\r\n      );\r\n      setStatus('Registering world... Please wait for confirmation');\r\n      \r\n      await tx.wait();\r\n      setStatus('Virtual world registered successfully!');\r\n      setWorldName('');\r\n      setWorldEndpoint('');\r\n    } catch (error) {\r\n      setStatus('Error registering world: ' + error.message);\r\n      console.error('Error:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const checkAccess = async () => {\r\n    if (!accessCheckUser.trim() || !accessCheckPlatform.trim()) {\r\n      setStatus('Please enter user address and platform name');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const hasAccess = await privacyIAMContract.hasAccess(accessCheckUser, accessCheckPlatform);\r\n      setStatus(`Access check result: ${hasAccess ? 'GRANTED' : 'DENIED'}`);\r\n    } catch (error) {\r\n      setStatus('Error checking access: ' + error.message);\r\n      console.error('Error:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const generateAccessToken = async () => {\r\n    if (!accessCheckPlatform.trim()) {\r\n      setStatus('Please enter platform name');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const token = await privacyIAMContract.generateAccessToken(accessCheckPlatform);\r\n      setStatus(`Access token generated: ${token}`);\r\n    } catch (error) {\r\n      setStatus('Error generating token: ' + error.message);\r\n      console.error('Error:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      try {\r\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        await initializeEthers();\r\n      } catch (error) {\r\n        setStatus('Error connecting wallet: ' + error.message);\r\n      }\r\n    } else {\r\n      setStatus('Please install MetaMask!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>🔐 Privacy-Preserving IAM for Metaverse</h1>\r\n        <div className=\"wallet-info\">\r\n          {account ? (\r\n            <div>\r\n              <p>Connected: {account.slice(0, 6)}...{account.slice(-4)}</p>\r\n              <div className={`status ${isRegistered ? 'registered' : 'unregistered'}`}>\r\n                {isRegistered ? '✅ Registered User' : '❌ Not Registered'}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <button onClick={connectWallet} className=\"connect-btn\">\r\n              Connect Wallet\r\n            </button>\r\n          )}\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"App-main\">\r\n        <div className=\"status-message\">\r\n          {status && <p>{status}</p>}\r\n        </div>\r\n\r\n        {account && (\r\n          <>\r\n            {/* User Registration Section */}\r\n            <div className=\"section\">\r\n              <h2>👤 User Management</h2>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter profile data (will be hashed for privacy)\"\r\n                  value={profileData}\r\n                  onChange={(e) => setProfileData(e.target.value)}\r\n                  className=\"input-field\"\r\n                />\r\n                {!isRegistered ? (\r\n                  <button \r\n                    onClick={registerUser} \r\n                    disabled={loading}\r\n                    className=\"action-btn register-btn\"\r\n                  >\r\n                    {loading ? 'Registering...' : 'Register User'}\r\n                  </button>\r\n                ) : (\r\n                  <button \r\n                    onClick={updateUserProfile} \r\n                    disabled={loading}\r\n                    className=\"action-btn update-btn\"\r\n                  >\r\n                    {loading ? 'Updating...' : 'Update Profile'}\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              {isRegistered && userPlatforms.length > 0 && (\r\n                <div className=\"user-platforms\">\r\n                  <h3>Your Platforms:</h3>\r\n                  <ul>\r\n                    {userPlatforms.map((platform, index) => (\r\n                      <li key={index}>{platform}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Platform Registration Section */}\r\n            <div className=\"section\">\r\n              <h2>🏢 Platform Management</h2>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Platform name\"\r\n                  value={platformName}\r\n                  onChange={(e) => setPlatformName(e.target.value)}\r\n                  className=\"input-field\"\r\n                />\r\n                <button \r\n                  onClick={registerPlatform} \r\n                  disabled={loading}\r\n                  className=\"action-btn platform-btn\"\r\n                >\r\n                  {loading ? 'Registering...' : 'Register Platform'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Virtual World Registration Section */}\r\n            <div className=\"section\">\r\n              <h2>🌐 Virtual World Registry</h2>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"World name\"\r\n                  value={worldName}\r\n                  onChange={(e) => setWorldName(e.target.value)}\r\n                  className=\"input-field\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"World endpoint URL\"\r\n                  value={worldEndpoint}\r\n                  onChange={(e) => setWorldEndpoint(e.target.value)}\r\n                  className=\"input-field\"\r\n                />\r\n                <label className=\"checkbox-label\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={requiresAuth}\r\n                    onChange={(e) => setRequiresAuth(e.target.checked)}\r\n                  />\r\n                  Requires Authentication\r\n                </label>\r\n                <button \r\n                  onClick={registerWorld} \r\n                  disabled={loading}\r\n                  className=\"action-btn world-btn\"\r\n                >\r\n                  {loading ? 'Registering...' : 'Register World'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Access Control Section */}\r\n            <div className=\"section\">\r\n              <h2>🔑 Access Control</h2>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"User address to check\"\r\n                  value={accessCheckUser}\r\n                  onChange={(e) => setAccessCheckUser(e.target.value)}\r\n                  className=\"input-field\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Platform name\"\r\n                  value={accessCheckPlatform}\r\n                  onChange={(e) => setAccessCheckPlatform(e.target.value)}\r\n                  className=\"input-field\"\r\n                />\r\n                <div className=\"button-group\">\r\n                  <button \r\n                    onClick={checkAccess} \r\n                    disabled={loading}\r\n                    className=\"action-btn check-btn\"\r\n                  >\r\n                    {loading ? 'Checking...' : 'Check Access'}\r\n                  </button>\r\n                  <button \r\n                    onClick={generateAccessToken} \r\n                    disabled={loading}\r\n                    className=\"action-btn token-btn\"\r\n                  >\r\n                    {loading ? 'Generating...' : 'Generate Token'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </main>\r\n\r\n      <footer className=\"App-footer\">\r\n        <p>Privacy-Preserving IAM System - Blockchain-based Identity Management</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}